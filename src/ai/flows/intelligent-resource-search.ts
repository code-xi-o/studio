// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A intelligent resource search AI agent.
 *
 * - intelligentResourceSearch - A function that handles the resource search process.
 * - IntelligentResourceSearchInput - The input type for the intelligentResourceSearch function.
 * - IntelligentResourceSearchOutput - The return type for the intelligentResourceSearch function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IntelligentResourceSearchInputSchema = z.object({
  query: z.string().describe('The search query to use.'),
  roadmap: z.string().describe('The specific roadmap to search within (e.g., AI/ML, Cybersecurity).'),
});
export type IntelligentResourceSearchInput = z.infer<typeof IntelligentResourceSearchInputSchema>;

const IntelligentResourceSearchOutputSchema = z.object({
  results: z.array(
    z.object({
      title: z.string().describe('The title of the resource.'),
      url: z.string().url().describe('The URL of the resource.'),
      description: z.string().describe('A brief description of the resource and its relevance to the query.'),
    })
  ).describe('A list of relevant resources found within the specified roadmap.'),
});
export type IntelligentResourceSearchOutput = z.infer<typeof IntelligentResourceSearchOutputSchema>;

export async function intelligentResourceSearch(input: IntelligentResourceSearchInput): Promise<IntelligentResourceSearchOutput> {
  return intelligentResourceSearchFlow(input);
}

const prompt = ai.definePrompt({
  name: 'intelligentResourceSearchPrompt',
  input: {schema: IntelligentResourceSearchInputSchema},
  output: {schema: IntelligentResourceSearchOutputSchema},
  prompt: `You are a search assistant specializing in finding resources within learning roadmaps.

  The user is searching for resources within the '{{roadmap}}' roadmap.  The user's query is: '{{query}}'.

  Find resources that are highly relevant to the user's query within the specified roadmap. Each resource should have a title, a URL, and a brief description explaining its relevance to the query.

  Return the results in the following JSON format:
  {{$responseExamples}}`,
});

const intelligentResourceSearchFlow = ai.defineFlow(
  {
    name: 'intelligentResourceSearchFlow',
    inputSchema: IntelligentResourceSearchInputSchema,
    outputSchema: IntelligentResourceSearchOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
